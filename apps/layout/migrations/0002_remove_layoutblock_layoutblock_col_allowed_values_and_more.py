# Generated by Django 5.2.2 on 2025-09-21 19:05

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blocks', '0005_alter_blockfilterlayouttemplate_options'),
        ('layout', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            sql=(
                "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_allowed_values;\n"
                "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_sm_allowed_values;\n"
                "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_md_allowed_values;\n"
                "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_lg_allowed_values;\n"
                "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_xl_allowed_values;\n"
                "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_xxl_allowed_values;\n"
            ),
            reverse_sql=migrations.RunSQL.noop,
        ),
        migrations.RunSQL(
            sql=(
                "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col CASCADE;\n"
                "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_sm CASCADE;\n"
                "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_md CASCADE;\n"
                "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_lg CASCADE;\n"
                "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_xl CASCADE;\n"
                "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_xxl CASCADE;\n"
            ),
            reverse_sql=migrations.RunSQL.noop,
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=(
                        "ALTER TABLE layout_layoutblock ADD COLUMN IF NOT EXISTS col_span integer NOT NULL DEFAULT 1;\n"
                        "ALTER TABLE layout_layoutblock ADD COLUMN IF NOT EXISTS row_span integer NOT NULL DEFAULT 1;\n"
                    ),
                    reverse_sql=migrations.RunSQL.noop,
                ),
            ],
            state_operations=[
                migrations.AddField(
                    model_name='layoutblock',
                    name='col_span',
                    field=models.PositiveIntegerField(default=1),
                ),
                migrations.AddField(
                    model_name='layoutblock',
                    name='row_span',
                    field=models.PositiveIntegerField(default=1),
                ),
            ],
        ),
        migrations.RunSQL(
            sql=(
                "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_span_range;\n"
                "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_row_span_range;\n"
            ),
            reverse_sql=migrations.RunSQL.noop,
        ),
        migrations.AddConstraint(
            model_name='layoutblock',
            constraint=models.CheckConstraint(condition=models.Q(('col_span__gte', 1), ('col_span__lte', 4)), name='layoutblock_col_span_range'),
        ),
        migrations.AddConstraint(
            model_name='layoutblock',
            constraint=models.CheckConstraint(condition=models.Q(('row_span__gte', 1), ('row_span__lte', 4)), name='layoutblock_row_span_range'),
        ),
    ]
