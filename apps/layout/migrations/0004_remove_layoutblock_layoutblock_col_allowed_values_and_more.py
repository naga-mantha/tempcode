# Generated by Django 5.2.2 on 2025-09-21 20:13

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('layout', '0003_gridstack_positions'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=(
                        "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_allowed_values;\n"
                        "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_sm_allowed_values;\n"
                        "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_md_allowed_values;\n"
                        "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_lg_allowed_values;\n"
                        "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_xl_allowed_values;\n"
                        "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_xxl_allowed_values;\n"
                        "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_col_span_range;\n"
                        "ALTER TABLE layout_layoutblock DROP CONSTRAINT IF EXISTS layoutblock_row_span_range;\n"
                        "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col CASCADE;\n"
                        "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_sm CASCADE;\n"
                        "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_md CASCADE;\n"
                        "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_lg CASCADE;\n"
                        "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_xl CASCADE;\n"
                        "ALTER TABLE layout_layoutblock DROP COLUMN IF EXISTS col_xxl CASCADE;\n"
                    ),
                    reverse_sql=migrations.RunSQL.noop,
                ),
            ],
            state_operations=[
                # Remove legacy constraints from state
                migrations.RemoveConstraint(model_name='layoutblock', name='layoutblock_col_allowed_values'),
                migrations.RemoveConstraint(model_name='layoutblock', name='layoutblock_col_sm_allowed_values'),
                migrations.RemoveConstraint(model_name='layoutblock', name='layoutblock_col_md_allowed_values'),
                migrations.RemoveConstraint(model_name='layoutblock', name='layoutblock_col_lg_allowed_values'),
                migrations.RemoveConstraint(model_name='layoutblock', name='layoutblock_col_xl_allowed_values'),
                migrations.RemoveConstraint(model_name='layoutblock', name='layoutblock_col_xxl_allowed_values'),
                migrations.RemoveConstraint(model_name='layoutblock', name='layoutblock_col_span_range'),
                migrations.RemoveConstraint(model_name='layoutblock', name='layoutblock_row_span_range'),
                # Remove legacy fields from state
                migrations.RemoveField(model_name='layoutblock', name='col'),
                migrations.RemoveField(model_name='layoutblock', name='col_sm'),
                migrations.RemoveField(model_name='layoutblock', name='col_md'),
                migrations.RemoveField(model_name='layoutblock', name='col_lg'),
                migrations.RemoveField(model_name='layoutblock', name='col_xl'),
                migrations.RemoveField(model_name='layoutblock', name='col_xxl'),
            ],
        ),
    ]
