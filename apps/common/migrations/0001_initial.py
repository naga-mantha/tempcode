# Generated by Django 5.2.2 on 2025-10-21 20:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_bi', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=5, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year_start_month', models.PositiveSmallIntegerField(default=1)),
                ('fiscal_year_start_day', models.PositiveSmallIntegerField(default=1)),
                ('home_currency_code', models.CharField(default='CAD', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='MrpRescheduleDaysClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='MRP Reschedule Days Classification Name')),
                ('min_days', models.IntegerField(blank=True, null=True, verbose_name='Minimum Days')),
                ('max_days', models.IntegerField(blank=True, null=True, verbose_name='Maximum Days')),
            ],
            options={
                'ordering': ('min_days', 'id'),
            },
        ),
        migrations.CreateModel(
            name='PurchaseSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otd_target_percent', models.PositiveIntegerField(default=95, help_text='Target OTD percentage')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseTimelinessClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Supplier OTD Classification Name')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Lower runs first')),
                ('active', models.BooleanField(default=True)),
                ('counts_for_ontime', models.BooleanField(default=False, help_text='If true, rows with this class count toward OTD%', verbose_name='Counts for OTD%')),
                ('min_days', models.IntegerField(blank=True, null=True, verbose_name='Minimum Days Offset')),
                ('min_inclusive', models.BooleanField(default=True, verbose_name='Min Inclusive')),
                ('max_days', models.IntegerField(blank=True, null=True, verbose_name='Maximum Days Offset')),
                ('max_inclusive', models.BooleanField(default=True, verbose_name='Max Inclusive')),
                ('color', models.CharField(blank=True, default='', max_length=20)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'ordering': ('priority', 'id'),
            },
        ),
        migrations.CreateModel(
            name='BusinessPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=15, verbose_name='Business Partner Code')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='Business Partner Name')),
                ('status', models.CharField(choices=[('-', '-'), ('active', 'Active'), ('inactive', 'Inactive')], default='-', max_length=10, verbose_name='Business Partner Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='common.businesspartner', verbose_name='Parent Business Partner')),
            ],
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.CreateModel(
            name='CalendarDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_working_day', models.BooleanField(default=True)),
                ('note', models.CharField(blank=True, max_length=255)),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='common.calendar')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_date', models.DateField(db_index=True)),
                ('rate', models.DecimalField(decimal_places=8, max_digits=20)),
                ('source', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fx_base_rates', to='common.currency')),
                ('quote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fx_quote_rates', to='common.currency')),
            ],
        ),
        migrations.CreateModel(
            name='ItemGroupType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Item Group Type Code')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Item Group Type Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('code',),
                'constraints': [models.UniqueConstraint(fields=('code',), name='unique_item_group_type')],
            },
        ),
        migrations.CreateModel(
            name='ItemGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Item Group Code')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Item Group Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.itemgrouptype', verbose_name='Item Group Type')),
            ],
            options={
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Item Type Code')),
                ('description', models.CharField(blank=True, default='', max_length=100, verbose_name='Item Type Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('code',),
                'constraints': [models.UniqueConstraint(fields=('code',), name='unique_item_type')],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Item Code')),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Item Description')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
                ('item_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.itemgroup', verbose_name='Item Group')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.itemtype', verbose_name='Item Type')),
            ],
        ),
        migrations.CreateModel(
            name='Labor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=100)),
                ('calendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.calendar')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.CreateModel(
            name='LaborVacation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('labor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vacations', to='common.labor')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=20)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.calendar')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.CreateModel(
            name='MachineDowntime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_dt', models.DateTimeField()),
                ('end_dt', models.DateTimeField()),
                ('description', models.TextField(blank=True)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.machine')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_order', models.CharField(max_length=10, verbose_name='Prod Order')),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.item')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionMrpMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mrp_message', models.TextField(blank=True, default='', null=True, verbose_name='MRP Message')),
                ('mrp_reschedule_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='MRP Reschedule Date')),
                ('reschedule_delta_days', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Reschedule Delta Days')),
                ('direction', models.CharField(blank=True, choices=[('PULL_IN', 'Pull In'), ('PUSH_OUT', 'Push Out')], db_index=True, max_length=8, null=True, verbose_name='Reschedule Direction')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_set', to='common.mrprescheduledaysclassification')),
                ('production_order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='mrp_message', to='common.productionorder')),
            ],
            options={
                'ordering': ('-mrp_reschedule_date', 'id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductionOrderCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=3)),
                ('description', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='common.productionordercategory')),
            ],
            options={
                'ordering': ('code',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='productionorder',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.productionordercategory'),
        ),
        migrations.CreateModel(
            name='ProductionOrderOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.PositiveIntegerField(blank=True, null=True)),
                ('setup_time', models.FloatField(blank=True, default=0, null=True)),
                ('production_time', models.FloatField(blank=True, default=0, null=True)),
                ('wait_time', models.FloatField(blank=True, default=0, null=True)),
                ('total_time', models.FloatField(blank=True, default=0, null=True)),
                ('remaining_time', models.FloatField(blank=True, default=0, null=True)),
                ('required_start', models.DateTimeField(blank=True, null=True)),
                ('required_end', models.DateTimeField(blank=True, null=True)),
                ('priority', models.PositiveIntegerField(default=999, help_text='Lower numbers = higher priority. 1 = top priority')),
                ('machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='operations', to='common.machine')),
                ('production_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='operations', to='common.productionorder')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
            options={
                'get_latest_by': 'operation',
            },
        ),
        migrations.CreateModel(
            name='ProductionOrderSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('schedule_state', models.CharField(choices=[('unscheduled', 'Unscheduled'), ('scheduled', 'Scheduled')], default='unscheduled', max_length=20)),
                ('execution_state', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('late', 'Late')], default='planned', max_length=20)),
                ('labor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.labor')),
                ('machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.machine')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schedule', to='common.productionorderoperation')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
            options={
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Program Code')),
                ('name', models.CharField(max_length=100, verbose_name='Program Name')),
                ('budget', models.FloatField(blank=True, null=True, verbose_name='Budget')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('name',),
                'constraints': [models.UniqueConstraint(fields=('code',), name='unique_program_code')],
            },
        ),
        migrations.AddField(
            model_name='itemgroup',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.program', verbose_name='Program'),
        ),
        migrations.CreateModel(
            name='PurchaseOrderCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=3)),
                ('description', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='common.purchaseordercategory')),
            ],
            options={
                'ordering': ('code',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.CharField(max_length=10, verbose_name='Purchase Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.businesspartner')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.purchaseordercategory')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.PositiveIntegerField(blank=True, null=True, verbose_name='PO Line')),
                ('sequence', models.PositiveIntegerField(blank=True, null=True, verbose_name='Sequence')),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], db_index=True, default='open', max_length=10, verbose_name='Purchase Order Line Status')),
                ('order_date', models.DateField(blank=True, null=True, verbose_name='Order Date')),
                ('initial_receive_date', models.DateField(blank=True, null=True, verbose_name='Initial Receive Date')),
                ('supplier_confirmed_date', models.DateField(blank=True, null=True, verbose_name='Supplier Confirmed Date')),
                ('modified_receive_date', models.DateField(blank=True, null=True, verbose_name='Modified Receive Date')),
                ('final_receive_date', models.DateField(blank=True, null=True, verbose_name='Report Date')),
                ('total_quantity', models.FloatField(blank=True, null=True, verbose_name='Total Quantity')),
                ('received_quantity', models.FloatField(blank=True, null=True, verbose_name='Received Quantity')),
                ('back_order', models.FloatField(blank=True, null=True, verbose_name='Back Order')),
                ('unit_price', models.FloatField(blank=True, null=True, verbose_name='Unit Price')),
                ('amount_original_currency', models.FloatField(blank=True, null=True, verbose_name='Amount (Orig. Curr.)')),
                ('amount_home_currency', models.FloatField(blank=True, null=True, verbose_name='Amount (Home Curr.)')),
                ('comments', models.TextField(blank=True, default='', null=True, verbose_name='Comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.currency')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.item', verbose_name='Item')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.purchaseorder')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseMrpMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mrp_message', models.TextField(blank=True, default='', null=True, verbose_name='MRP Message')),
                ('mrp_reschedule_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='MRP Reschedule Date')),
                ('reschedule_delta_days', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Reschedule Delta Days')),
                ('direction', models.CharField(blank=True, choices=[('PULL_IN', 'Pull In'), ('PUSH_OUT', 'Push Out')], db_index=True, max_length=8, null=True, verbose_name='Reschedule Direction')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_set', to='common.mrprescheduledaysclassification')),
                ('pol', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='mrp_message', to='common.purchaseorderline')),
            ],
            options={
                'ordering': ('-mrp_reschedule_date', 'id'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='productionorderoperation',
            name='op_po',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.purchaseorderline'),
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True, verbose_name='Receipt Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('number',), name='unique_receipt')],
            },
        ),
        migrations.CreateModel(
            name='ReceiptLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.PositiveIntegerField(verbose_name='Receipt Line')),
                ('received_quantity', models.FloatField(blank=True, null=True, verbose_name='Received Quantity')),
                ('receipt_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='Receipt Date')),
                ('days_offset', models.IntegerField(blank=True, null=True)),
                ('amount_home_currency', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receipt_lines', to='common.purchasetimelinessclassification')),
                ('po_line', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receipt_lines', to='common.purchaseorderline', verbose_name='PO Line (Obj)')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lines', to='common.receipt')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrderCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=3)),
                ('description', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='common.salesordercategory')),
            ],
            options={
                'ordering': ('code',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.CharField(max_length=10)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.businesspartner')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.salesordercategory')),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.PositiveIntegerField(blank=True, null=True)),
                ('sequence', models.PositiveIntegerField(blank=True, null=True)),
                ('d1_date', models.DateField(blank=True, null=True)),
                ('d2_date', models.DateField(blank=True, null=True)),
                ('d3_date', models.DateField(blank=True, null=True)),
                ('d4_date', models.DateField(blank=True, null=True)),
                ('total_quantity', models.FloatField(blank=True, null=True)),
                ('delivered_quantity', models.FloatField(blank=True, null=True)),
                ('back_order', models.FloatField(blank=True, null=True)),
                ('unit_price', models.FloatField(blank=True, null=True)),
                ('customer_po', models.CharField(blank=True, default='', max_length=20)),
                ('customer_po_line', models.CharField(blank=True, default='', max_length=20)),
                ('total_amount_cad', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.currency')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.item')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.salesorder')),
            ],
        ),
        migrations.CreateModel(
            name='ShiftTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.CreateModel(
            name='CalendarShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_day', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shifts', to='common.calendarday')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
                ('labours', models.ManyToManyField(blank=True, related_name='assigned_shifts', to='common.labor')),
                ('shift_template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.shifttemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SoValidateAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, limit_choices_to={'parent__isnull': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='so_validate_company_rows', to='common.businesspartner')),
                ('customer', models.ForeignKey(blank=True, limit_choices_to={'parent__isnull': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='so_validate_customer_rows', to='common.businesspartner')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='so_validate_aggregates', to='common.item')),
            ],
            options={
                'verbose_name': 'SO Validator Aggregate',
                'verbose_name_plural': 'SO Validator Aggregates',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=10)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('alternate_machines', models.ManyToManyField(blank=True, help_text='Other machines that can perform this task', null=True, related_name='alternate_for_tasks', to='common.machine')),
                ('primary_machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='primary_for_tasks', to='common.machine')),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.AddField(
            model_name='productionorderoperation',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.task'),
        ),
        migrations.CreateModel(
            name='ToDo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], default='Not Started', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('priority', models.IntegerField(db_index=True, default=999)),
                ('dependencies', models.ManyToManyField(blank=True, related_name='dependents', to='common.todo')),
            ],
            options={
                'ordering': ['priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='UOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.AddField(
            model_name='purchaseorderline',
            name='uom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.uom'),
        ),
        migrations.CreateModel(
            name='PlannedPurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.CharField(max_length=20, verbose_name='Planned Order')),
                ('quantity', models.FloatField(blank=True, null=True, verbose_name='Planned Quantity')),
                ('planned_start_date', models.DateField(blank=True, null=True, verbose_name='Planned Start Date')),
                ('planned_end_date', models.DateField(blank=True, null=True, verbose_name='Planned End Date')),
                ('required_date', models.DateField(blank=True, null=True, verbose_name='Required Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.item')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.businesspartner')),
                ('uom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.uom')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlannedProductionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.CharField(max_length=20, verbose_name='Planned Order')),
                ('quantity', models.FloatField(blank=True, null=True, verbose_name='Planned Quantity')),
                ('planned_start_date', models.DateField(blank=True, null=True, verbose_name='Planned Start Date')),
                ('planned_end_date', models.DateField(blank=True, null=True, verbose_name='Planned End Date')),
                ('required_date', models.DateField(blank=True, null=True, verbose_name='Required Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.item')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.businesspartner')),
                ('uom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.uom')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=20)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('workflow', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.workflow')),
                ('workflow_state', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='django_bi.state')),
            ],
        ),
        migrations.AddField(
            model_name='productionorderoperation',
            name='workcenter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='operations', to='common.workcenter'),
        ),
        migrations.AddField(
            model_name='labor',
            name='workcenter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.workcenter'),
        ),
        migrations.AddConstraint(
            model_name='businesspartner',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_business_partner'),
        ),
        migrations.AddConstraint(
            model_name='calendar',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_calendar_name'),
        ),
        migrations.AddIndex(
            model_name='exchangerate',
            index=models.Index(fields=['base', 'quote', 'rate_date'], name='idx_rate_pair_date'),
        ),
        migrations.AddConstraint(
            model_name='exchangerate',
            constraint=models.UniqueConstraint(fields=('base', 'quote', 'rate_date'), name='unique_exchange_rate'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_item'),
        ),
        migrations.AddConstraint(
            model_name='machine',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_machine'),
        ),
        migrations.AddConstraint(
            model_name='productionordercategory',
            constraint=models.UniqueConstraint(fields=('code', 'parent'), name='unique_production_order_category'),
        ),
        migrations.AddConstraint(
            model_name='productionordercategory',
            constraint=models.CheckConstraint(condition=models.Q(('pk', models.F('parent')), _negated=True), name='productionordercategory_no_self_parent'),
        ),
        migrations.AddConstraint(
            model_name='productionorder',
            constraint=models.UniqueConstraint(fields=('production_order',), name='unique_production_order'),
        ),
        migrations.AddConstraint(
            model_name='itemgroup',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_item_group'),
        ),
        migrations.AddConstraint(
            model_name='purchaseordercategory',
            constraint=models.UniqueConstraint(fields=('code', 'parent'), name='unique_purchase_order_category'),
        ),
        migrations.AddConstraint(
            model_name='purchaseordercategory',
            constraint=models.CheckConstraint(condition=models.Q(('pk', models.F('parent')), _negated=True), name='purchaseordercategory_no_self_parent'),
        ),
        migrations.AddConstraint(
            model_name='purchaseorder',
            constraint=models.UniqueConstraint(fields=('order',), name='unique_purchase_order'),
        ),
        migrations.AddConstraint(
            model_name='receiptline',
            constraint=models.UniqueConstraint(fields=('receipt', 'line'), name='unique_receipt_line'),
        ),
        migrations.AddConstraint(
            model_name='salesordercategory',
            constraint=models.UniqueConstraint(fields=('code', 'parent'), name='unique_sales_order_category'),
        ),
        migrations.AddConstraint(
            model_name='salesordercategory',
            constraint=models.CheckConstraint(condition=models.Q(('pk', models.F('parent')), _negated=True), name='salesordercategory_no_self_parent'),
        ),
        migrations.AddConstraint(
            model_name='salesorder',
            constraint=models.UniqueConstraint(fields=('order',), name='unique_sales_order'),
        ),
        migrations.AddConstraint(
            model_name='salesorderline',
            constraint=models.UniqueConstraint(fields=('order', 'line', 'sequence'), name='unique_sales_order_line_sequence'),
        ),
        migrations.AddConstraint(
            model_name='shifttemplate',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_shift_template_name'),
        ),
        migrations.AddIndex(
            model_name='sovalidateaggregate',
            index=models.Index(fields=['period'], name='common_sova_period_14fe9b_idx'),
        ),
        migrations.AddIndex(
            model_name='sovalidateaggregate',
            index=models.Index(fields=['customer', 'period'], name='common_sova_custome_2bf57f_idx'),
        ),
        migrations.AddIndex(
            model_name='sovalidateaggregate',
            index=models.Index(fields=['company', 'period'], name='common_sova_company_82c072_idx'),
        ),
        migrations.AddIndex(
            model_name='sovalidateaggregate',
            index=models.Index(fields=['item', 'period'], name='common_sova_item_id_17a1e8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sovalidateaggregate',
            unique_together={('item', 'company', 'customer', 'period')},
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_task'),
        ),
        migrations.AddConstraint(
            model_name='uom',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_uom_code'),
        ),
        migrations.AddConstraint(
            model_name='purchaseorderline',
            constraint=models.UniqueConstraint(fields=('order', 'line', 'sequence'), name='unique_purchase_order_line'),
        ),
        migrations.AddConstraint(
            model_name='plannedpurchaseorder',
            constraint=models.UniqueConstraint(fields=('order',), name='unique_planned_purchase_order'),
        ),
        migrations.AddConstraint(
            model_name='plannedproductionorder',
            constraint=models.UniqueConstraint(fields=('order',), name='unique_planned_production_order'),
        ),
        migrations.AddConstraint(
            model_name='workcenter',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_work_center'),
        ),
        migrations.AddConstraint(
            model_name='productionorderoperation',
            constraint=models.UniqueConstraint(fields=('production_order', 'operation'), name='unique_production_order_operation'),
        ),
        migrations.AddConstraint(
            model_name='labor',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_labor_code'),
        ),
    ]
