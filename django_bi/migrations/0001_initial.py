# Generated by Django 5.2.2 on 2025-10-21 20:43

import django.db.models.deletion
from django_bi.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='WF State Name')),
                ('is_start', models.BooleanField(default=False, verbose_name='WF State Start')),
                ('is_end', models.BooleanField(default=False, verbose_name='WF State End')),
            ],
        ),
        migrations.CreateModel(
            name='BlockFilterLayoutTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layout', models.JSONField(default=dict)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_bi.block', unique=True)),
            ],
            options={
                'verbose_name': 'Block Filter Layout Template',
                'verbose_name_plural': 'Block Filter Layout Templates',
            },
        ),
        migrations.CreateModel(
            name='FieldDisplayRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_label', models.CharField(max_length=255)),
                ('field_name', models.CharField(max_length=255)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('is_excluded', models.BooleanField(default=False)),
            ],
            options={
                'unique_together': {('model_label', 'field_name')},
            },
        ),
        migrations.CreateModel(
            name='Layout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=10)),
                ('description', models.TextField(blank=True, default='')),
                ('category', models.CharField(blank=True, default='', max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layouts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LayoutBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0)),
                ('x', models.PositiveIntegerField(default=0)),
                ('y', models.PositiveIntegerField(default=0)),
                ('w', models.PositiveIntegerField(default=4)),
                ('h', models.PositiveIntegerField(default=2)),
                ('col_span', models.PositiveIntegerField(default=1)),
                ('row_span', models.PositiveIntegerField(default=1)),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('note', models.TextField(blank=True, default='')),
                ('preferred_filter_name', models.CharField(blank=True, default='', max_length=255)),
                ('preferred_column_config_name', models.CharField(blank=True, default='', max_length=255)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_bi.block')),
                ('layout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='django_bi.layout')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='LayoutFilterConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('values', models.JSONField(default=dict)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=7)),
                ('is_default', models.BooleanField(default=False)),
                ('layout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filter_configs', to='django_bi.layout')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PivotConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('schema', models.JSONField(default=dict)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=7)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_bi.block')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('allowed_groups', models.ManyToManyField(blank=True, help_text='Which user groups may trigger this', to='auth.group')),
                ('dest_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitions_to', to='django_bi.state')),
                ('source_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitions_from', to='django_bi.state')),
            ],
        ),
        migrations.CreateModel(
            name='TransitionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('from_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='django_bi.state')),
                ('to_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='django_bi.state')),
                ('transition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_bi.transition')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='WF Name')),
                ('status', models.CharField(choices=[('active', 'Active'), ('deprecated', 'Deprecated'), ('inactive', 'Inactive')], default='active', help_text='“Active” allows creation & transitions; “Deprecated” allows transitions only; “Inactive” disallows both.', max_length=10, verbose_name='WF Status')),
                ('content_type', models.ForeignKey(blank=True, help_text='Which Django model this workflow is for', null=True, on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype', verbose_name='WF Model')),
            ],
        ),
        migrations.AddField(
            model_name='transition',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitions', to='django_bi.workflow'),
        ),
        migrations.AddField(
            model_name='state',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='states', to='django_bi.workflow'),
        ),
        migrations.CreateModel(
            name='BlockColumnConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('fields', models.JSONField(default=list)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=7)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_bi.block')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('block', 'user', 'name'), name='unique_column_config_per_user_block')],
            },
        ),
        migrations.CreateModel(
            name='BlockFilterConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('values', models.JSONField(default=dict)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=7)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_bi.block')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('block', 'user', 'name'), name='unique_filter_config_per_user_block')],
            },
        ),
        migrations.CreateModel(
            name='BlockFilterLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layout', models.JSONField(default=dict)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_bi.block')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('block', 'user'), name='unique_filter_layout_per_user_block')],
            },
        ),
        migrations.AddConstraint(
            model_name='layout',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='unique_layout_name_per_user'),
        ),
        migrations.AddConstraint(
            model_name='layout',
            constraint=models.UniqueConstraint(fields=('user', 'slug'), name='unique_layout_slug_per_user'),
        ),
        migrations.AddIndex(
            model_name='layoutblock',
            index=models.Index(fields=['layout', 'position'], name='layout_pos_idx'),
        ),
        migrations.AddConstraint(
            model_name='layoutblock',
            constraint=models.CheckConstraint(condition=models.Q(('w__gte', 1), ('w__lte', 12)), name='layoutblock_w_range'),
        ),
        migrations.AddConstraint(
            model_name='layoutblock',
            constraint=models.CheckConstraint(condition=models.Q(('h__gte', 1), ('h__lte', 12)), name='layoutblock_h_range'),
        ),
        migrations.AddConstraint(
            model_name='layoutblock',
            constraint=models.CheckConstraint(condition=models.Q(('x__gte', 0)), name='layoutblock_x_nonneg'),
        ),
        migrations.AddConstraint(
            model_name='layoutblock',
            constraint=models.CheckConstraint(condition=models.Q(('y__gte', 0)), name='layoutblock_y_nonneg'),
        ),
        migrations.AddConstraint(
            model_name='layoutfilterconfig',
            constraint=models.UniqueConstraint(fields=('layout', 'user', 'name'), name='unique_layout_filter_per_user'),
        ),
        migrations.AddConstraint(
            model_name='layoutfilterconfig',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('layout', 'user'), name='unique_default_layout_filter_per_user'),
        ),
        migrations.AddConstraint(
            model_name='pivotconfig',
            constraint=models.UniqueConstraint(fields=('block', 'user', 'name'), name='unique_pivot_config_per_user_block'),
        ),
        migrations.AlterUniqueTogether(
            name='transition',
            unique_together={('workflow', 'source_state', 'dest_state', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='state',
            unique_together={('workflow', 'name')},
        ),
    ]
